group = "com.example.perfect_corp_homework.download"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "2.0.10"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:7.3.1")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"


android {
    if (project.android.hasProperty("namespace")) {
        namespace = "com.example.perfect_corp_homework.download"
    }

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 24
    }

    dependencies {

        implementation 'com.squareup.okhttp3:okhttp:4.12.0'
        implementation 'com.google.code.gson:gson:2.11.0'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'
        implementation 'org.slf4j:slf4j-android:1.7.36'
        implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.1'
        implementation 'com.google.gms:google-services:4.4.2'
        implementation(platform("com.google.firebase:firebase-bom:33.2.0"))


        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.1.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
